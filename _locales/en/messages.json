{
    "extension_name": {
        "message": "Acquia Cloud Logstream Client",
        "description": "The name of this extension."
    },
    "extension_shortName": {
        "message": "Logstream",
        "description": "The short name of this extension, used when the full name is too long to display."
    },
    "extension_description": {
        "message": "View logs generated as you browse around your site.",
        "description": "The description of this extension displayed on the extensions page."
    },

    "options_title": {
        "message": "Acquia Cloud Logstream Client Options",
        "description": "The title of the Options page for this extension."
    },
    "options_prompt": {
        "message": "Provide your Acquia Cloud login credentials in order to connect to the Acquia Cloud log streaming API. They will be saved automatically.",
        "description": "Prompts users to enter their username and password on the extension's Options page."
    },
    "options_username": {
        "message": "Email:",
        "description": "The label of the username (email) input field on this extension's Options page."
    },
    "options_password": {
        "message": "Password:",
        "description": "The label of the password input field on this extension's Options page."
    },
    "options_credsChecking": {
        "message": "Checking credentials...",
        "description": "A message that displays on this extension's Options page while the username and password are being checked to see if they authenticate."
    },
    "options_credsSuccess": {
        "message": "Authentication was successful.",
        "description": "A message that displays on this extension's Options page when the username and password successfully authenticate with Acquia."
    },
    "options_credsFailure": {
        "message": "Authentication failed.",
        "description": "A message that displays on this extension's Options page when the username and password fail to authenticate with Acquia."
    },
    "options_passwordWarning": {
        "message": "Note that these credentials are saved unencrypted on your local machine (as are all passwords that Chrome remembers). This is generally not an issue because stealing the credentials would require physical or privileged access to your machine, in which case someone could just install a keylogger anyway. However, if you are working on a shared machine or do not want your Acquia Cloud password stored unencrypted locally, please remember to come back to this options page and erase your password after you finish using this extension.",
        "description": "Warns users about how their password will be stored."
    },

    "panel_sitename": {
        "message": "Sitename:",
        "description": "The label of the sitename select element on the log streaming panel."
    },
    "panel_environment": {
        "message": "Environment:",
        "description": "The label of the environment select element on the log streaming panel."
    },
    "panel_logTypes": {
        "message": "Show log types:",
        "description": "The label of the multi-select element on the log streaming panel for choosing which log types to display."
    },
    "panel_regex": {
        "message": "Filter:",
        "description": "The label of the textfield on the log streaming panel that filters incoming messages to those that match the provided regular expression."
    },
    "panel_onlyMe": {
        "message": "Show only logs I generate",
        "description": "The label of the checkbox on the log streaming panel that toggles whether to only show logs generated as a result of the current user's requests."
    },
    "panel_connect": {
        "message": "Connect",
        "description": "The default text of the Connect button on the log streaming panel."
    },
    "panel_disconnect": {
        "message": "Disconnect",
        "description": "The text of the button on the log streaming panel that will cause logs to stop streaming when clicked."
    },
    "panel_reconnect": {
        "message": "Reconnect",
        "description": "The text of the button on the log streaming panel that will cause logs to restart streaming when clicked."
    },

    "logType_apacheError": {
        "message": "Apache error"
    },
    "logType_apacheRequest": {
        "message": "Apache request"
    },
    "logType_balancerRequest": {
        "message": "Balancer request"
    },
    "logType_drupalRequest": {
        "message": "Drupal request"
    },
    "logType_drupalWatchdog": {
        "message": "Drupal watchdog"
    },
    "logType_mysqlSlow": {
        "message": "MySQL slow query"
    },
    "logType_phpError": {
        "message": "PHP error"
    },
    "logType_varnishRequest": {
        "message": "Varnish request"
    },
    "logType_debug": {
        "message": "debug"
    },
    "logType_info": {
        "message": "info"
    },

    "info_refreshSitesStart": {
        "message": "Refreshing site list...",
        "description": "A debug message that displays when the site list is about to be retrieved from the Acquia Cloud API."
    },
    "info_refreshSitesSuccess": {
        "message": "Site list refreshed successfully.",
        "description": "A debug message that displays when refreshing the site list from the Acquia Cloud API has completed."
    },
    "info_refreshEnvironmentsStart": {
        "message": "Refreshing environments list for site \"$site$\"...",
        "description": "A debug message that displays when the environment list is about to be retrieved from the Acquia Cloud API.",
        "placeholders": {
            "site": {
                "content": "$1",
                "example": "devcloud:mysite"
            }
        }
    },
    "info_refreshEnvironmentsSuccess": {
        "message": "Environment list refreshed successfully.",
        "description": "A debug message that displays when refreshing the environment list from the Acquia Cloud API has completed."
    },
    "info_connecting": {
        "message": "Connecting...",
        "description": "An informational message that displays in the log stream after the Connect button is pressed as a visual cue that the log stream connection is being established."
    },
    "info_connected": {
        "message": "Connected successfully.",
        "description": "An informational message that displays in the log stream after a WebSocket connection is successfully established."
    },
    "info_connectedToServer": {
        "message": "Connected to server $server$.",
        "description": "A debug message that displays in the log stream when the extension learns that logs can be streamed from a specific server.",
        "placeholders": {
            "server": {
                "content": "$1",
                "example": "bal-3"
            }
        }
    },
    "info_logTypeAvailable": {
        "message": "$type$ logs are available for streaming from $server$.",
        "description": "A debug message that displays in the log stream when streaming a specific type of log from a specific server is available for streaming.",
        "placeholders": {
            "type": {
                "content": "$1",
                "example": "Balancer request"
            },
            "server": {
                "content": "$2",
                "example": "bal-3"
            }
        }
    },
    "info_requestEnableLogType": {
        "message": "Requesting $type$ logs from $server$.",
        "description": "A debug message that displays in the log stream when the extension requests a specific type of log from a specific server.",
        "placeholders": {
            "type": {
                "content": "$1",
                "example": "Balancer request"
            },
            "server": {
                "content": "$2",
                "example": "bal-3"
            }
        }
    },
    "info_logTypeEnabled": {
        "message": "Enabled streaming $type$ logs from $server$.",
        "description": "A debug message that displays in the log stream when streaming a specific type of log from a specific server has been successfully enabled.",
        "placeholders": {
            "type": {
                "content": "$1",
                "example": "Balancer request"
            },
            "server": {
                "content": "$2",
                "example": "bal-3"
            }
        }
    },
    "info_keepalive": {
        "message": "The log streaming connection is idle, but the connection remains open.",
        "description": "A debug message that displays in the log stream when a keepalive message is confirmed."
    },
    "info_connectionClosed": {
        "message": "The log streaming connection closed.",
        "description": "A debug message that displays in the log stream after a WebSocket connection is closed."
    },

    "errors_getSettings": {
        "message": "Retrieving your saved settings failed with the error: $error$",
        "description": "The error message that displays in the general case when saved settings cannot be retrieved.",
        "placeholders": {
            "error": {
                "content": "$1"
            }
        }
    },
    "errors_getCachedDomainsFailed": {
        "message": "Retrieving cached associations between domains, sitenames, and environments failed with the error: $error$",
        "description": "The error message that displays when the domain cache cannot be retrieved.",
        "placeholders": {
            "error": {
                "content": "$1"
            }
        }
    },
    "errors_getCredentialsFailed": {
        "message": "Retrieving saved Acquia authentication credentials failed with the error: $error$",
        "description": "The error message that displays when saved login settings cannot be retrieved.",
        "placeholders": {
            "error": {
                "content": "$1"
            }
        }
    },
    "errors_credentials": {
        "message": "You must $aOpen$enter valid Acquia Cloud login credentials in this extension's settings$aClose$ in order to connect to the log streaming service.",
        "description": "Displays on the main Dev Tools log streaming panel when no Acquia Cloud credentials have been entered.",
        "placeholders": {
            "aOpen": {
                "content": "<a href=\"#\" class=\"options-link\">"
            },
            "aClose": {
                "content": "</a>"
            }
        }
    },
    "errors_noSites": {
        "message": "You do not have access to any sites on Acquia Cloud. To stream logs, create a site (e.g. at https://insight.acquia.com/subscriptions/add or by asking your account manager) or ask your site's administrator to give you access.",
        "description": "Displays in the log stream when the authenticated user has no sites on Acquia Cloud."
    },
    "errors_refreshSitesFailed": {
        "message": "Refreshing the site list failed with status $status$: $response$",
        "description": "An informational message that displays in the log stream when refreshing the site list from the Acquia Cloud API fails.",
        "placeholders": {
            "status": {
                "content": "$1",
                "example": "401 Unauthorized"
            },
            "response": {
                "content": "$2",
                "example": "{\"time\":\"2015-11-22 23:04:11 +0000\",\"message\":\"Not authorized\"}"
            }
        }
    },
    "errors_noEnvironments": {
        "message": "The site \"$site$\" does not have any environments yet.",
        "description": "Displays in the log stream when the selected site has no environments.",
        "placeholders": {
            "site": {
                "content": "$1",
                "example": "devcloud:mysite"
            }
        }
    },
    "errors_refreshEnvironmentsFailed": {
        "message": "Retrieving environments for site \"$site$\" failed. $status$: $response$",
        "description": "A debug message that displays in the log stream when refreshing the environment list from the Acquia Cloud API fails.",
        "placeholders": {
            "site": {
                "content": "$1",
                "example": "devcloud:mysite"
            },
            "status": {
                "content": "$2",
                "example": "401 Unauthorized"
            },
            "response": {
                "content": "$3",
                "example": "{\"time\":\"2015-11-22 23:04:11 +0000\",\"message\":\"Not authorized\"}"
            }
        }
    },
    "errors_invalidSitename": {
        "message": "You must choose a valid sitename from which to stream logs.",
        "description": "An alert that displays when the user tries to connect to the log stream without choosing a site from which to stream logs."
    },
    "errors_invalidEnvironment": {
        "message": "You must choose a valid environment from which to stream logs.",
        "description": "An alert that displays when the user tries to connect to the log stream without choosing an environment from which to stream logs."
    },
    "errors_getLogStreamConnectionInfoFailed": {
        "message": "Unable to retrieve connection info. $status$: $response$",
        "description": "An informational message that displays in the log stream when retrieving the WebSocket connection information from the Acquia Cloud API fails.",
        "placeholders": {
            "status": {
                "content": "$1",
                "example": "401 Unauthorized"
            },
            "response": {
                "content": "$2",
                "example": "{\"time\":\"2015-11-22 23:04:11 +0000\",\"message\":\"Not authorized\"}"
            }
        }
    },
    "errors_getDomainsFailed": {
        "message": "Retrieving domains failed with status $status$: $response$",
        "description": "A debug message that displays in the log stream when retrieving a list of domains from the Acquia Cloud API fails.",
        "placeholders": {
            "status": {
                "content": "$1",
                "example": "401 Unauthorized"
            },
            "response": {
                "content": "$2",
                "example": "{\"time\":\"2015-11-22 23:04:11 +0000\",\"message\":\"Not authorized\"}"
            }
        }
    },
    "errors_getHostname": {
        "message": "Unable to get current hostname: $error$",
        "description": "A debug message that displays in the log stream when retrieving the hostname from the active tab fails.",
        "placeholders": {
            "error": {
                "content": "$1"
            }
        }
    },
    "errors_regexDidNotCompile": {
        "message": "Compiling the regex /$regex$/m failed. $name$: $message$",
        "description": "An informational message that displays in the log stream when the contents of the Filter textfield are not a valid regular expression.",
        "placeholders": {
            "regex": {
                "content": "$1",
                "example": "127\\.0\\.0\\.1"
            },
            "name": {
                "content": "$2",
                "example": "SyntaxError"
            },
            "message": {
                "content": "$3",
                "example": "Invalid regular expression: /(/: Unterminated group"
            }
        }
    },
    "errors_logEventHandlingFailed": {
        "message": "Error receiving event: $error$",
        "description": "A debug message that displays in the log stream when handling a log message fails.",
        "placeholders": {
            "error": {
                "content": "$1"
            }
        }
    },
    "errors_wsError": {
        "message": "An error occurred in the log streaming connection.",
        "description": "An informational message that displays in the log stream when an error occurs in the WebSocket connection."
    },
    "errors_serverSideTrouble": {
        "message": "A server-side log streaming error occurred: $error$",
        "description": "A debug message that displays in the log stream when the server sends an error message.",
        "placeholders": {
            "error": {
                "content": "$1"
            }
        }
    }
}
